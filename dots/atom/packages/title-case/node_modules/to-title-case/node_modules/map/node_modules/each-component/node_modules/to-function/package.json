{
  "name": "to-function",
  "repo": "component/to-function",
  "description": "Convert property access strings into functions",
  "version": "2.0.3",
  "keywords": [
    "utility"
  ],
  "dependencies": {
    "component-props": "*"
  },
  "scripts": {
    "test": "make test"
  },
  "devDependencies": {
    "better-assert": "*",
    "mocha": "*",
    "remove-try-require": "0.0.0",
    "should": "*"
  },
  "browserify": {
    "transform": [
      "remove-try-require"
    ]
  },
  "component": {
    "scripts": {
      "to-function/index.js": "index.js"
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/component/to-function.git"
  },
  "readme": "# to-function\n\n  Convert property access strings into functions\n\n## Installation\n\n    $ component install component/to-function\n\n## Examples\n\n```js\nvar toFunction = require('to-function');\nvar fn = toFunction('name.first');\nvar user = { name: { first: 'Tobi' }};\nfn(user);\n// => \"Tobi\"\n```\n\n### Dot access\n\n```js\n\nvar _ = require('..');\n\nvar users = [\n  { name: { first: 'Tobi' }},\n  { name: { first: 'Loki' }},\n  { name: { first: 'Jane' }},\n  { name: { first: 'Manny' }}\n];\n\nvar short = users.map(_('name.first'));\nconsole.log(short);\n// => [ 'Tobi', 'Loki', 'Jane', 'Manny' ]\n```\n\n### Equality\n\n```js\nvar _ = require('..');\n\nvar tobi = { name: { first: 'Tobi' }, age: 2 };\nvar loki = { name: { first: 'Loki' }, age: 2 };\nvar jane = { name: { first: 'Jane' }, age: 6 };\n\nvar users = [tobi, loki, jane];\n\nvar user = users.filter(_(loki)).pop();\nconsole.log(user);\n// => { name: { first: 'Loki' }, age: 2 }\n```\n\n### Expressions\n\n```js\nvar _ = require('..');\n\nvar users = [\n  { name: { first: 'Tobi' }, age: 2 },\n  { name: { first: 'Loki' }, age: 2 },\n  { name: { first: 'Jane' }, age: 6 }\n];\n\nvar oldPets = users.filter(_('age > 2 && age < 10'));\nconsole.log(oldPets);\n// => [ { name: { first: 'Jane' }, age: 6 } ]\n```\n\n### Regular expressions\n\n```js\nvar _ = require('..');\n\nvar users = [\n  'Tobi',\n  'Loki',\n  'Jane'\n];\n\nvar t = users.filter(_(/^T/));\n\nconsole.log(t);\n// => [ 'Tobi' ]\n```\n\n### Nesting\n\n```js\nvar _ = require('..');\n\nvar users = [\n  { name: { first: 'Tobi', last: 'Ferret' }, age: 2 },\n  { name: { first: 'Loki', last: 'Ferret' }, age: 2 },\n  { name: { first: 'Luna', last: 'Cat' }, age: 2 },\n  { name: { first: 'Manny', last: 'Cat' }, age: 3 }\n];\n\n// single-key\n\nvar query = _({\n  name: {\n    last: 'Cat'\n  }\n});\n\nconsole.log(users.filter(query));\n// => [ { name: { first: 'Luna', last: 'Cat' }, age: 2 },\n//      { name: { first: 'Manny', last: 'Cat' }, age: 3 } ]\n\n// multi-key\n\nvar query = _({\n  name: {\n    first: /^L/,\n    last: 'Cat'\n  }\n});\n\nconsole.log(users.filter(query));\n// => [ { name: { first: 'Luna', last: 'Cat' }, age: 2 } ]\n\n// multi-level\n\nvar query = _({\n  name: { last: 'Cat' },\n  age: 3\n});\n\nconsole.log(users.filter(query));\n// => [ { name: { first: 'Manny', last: 'Cat' }, age: 3 } ]\n```\n\n## License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/component/to-function/issues"
  },
  "homepage": "https://github.com/component/to-function",
  "_id": "to-function@2.0.3",
  "dist": {
    "shasum": "bd44c8134a9ab687365cddf1e48606925fb09985"
  },
  "_from": "to-function@*",
  "_resolved": "https://registry.npmjs.org/to-function/-/to-function-2.0.3.tgz"
}
